<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html> <head>
<title>ACP Controle Times</title>

  <!-- 'viewport' is used by bootstrap to respond to device size -->
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <!-- Javascript:  JQuery from a content distribution network (CDN) -->
  <script
     src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js">
  </script>

  <!-- Bootstrap includes javascript and css  (must follow jquery) -->
  <link rel="stylesheet"
   href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css">
   <script
    src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js">
   </script>

  <!-- <script type="text/javascript"  -->
  <!--    src="/static/js/calc.js"> -->
  <!-- </script> -->
</head>

   <!-- Our own style sheet -->
   <link rel="stylesheet" href="/static/css/calc.css" />

<body>
<!-- bootstrap requires a 'container' div around content -->
<div class="container">

<h1>Brevet Control Time Calculator</h1>

  <!--
  -- If there are any warnings or other messages from a prior
  -- request to the server, 
  -- they appear above the rest of the content, just until the next 
  -- action.  (This is only on request/response transactions that
  -- result in regenerating the page, not on every xmlhttp request.) 
  -->

{% with messages = get_flashed_messages() %}
  {% if messages %}
    <ul class=flashes>
    {% for message in messages %}
      <li>{{ message }}</li>
    {% endfor %}
    </ul>
  {% endif %}
{% endwith %}


<!-- Design on bootstrap grid -->
<form role="form">
<table cellpadding="4"><tr colspan=6><td>Starting Date:</td><td><input type="text" class="form-control" name ="startdate" id = "sd" value="MM/DD/YYYY"/></td></tr><tr><td>Starting Time:</td><td><input type="text" class="form-control" name ="starttime" id = "st" value="HH:MM"/></td></tr><tr><td>Total Distance:</td><td><select name="distance"><option value="200">200 km</option><option value="300">300 km</option><option value="400">400 km</option><option value="600">600 km</option><option value="1000">1000 km</option><option value="1300">1300 km</option></td><td>Input Format:</td><td><select name="inputDistance"><option value="mi" id="inMi">mi</option><option value="km">km</option></td></tr>
</table>
<br>
<table width="80%">
<tr><td align=center colspan=4><font size="10">Checkpoints</td></tr>
<tr><td align=center>Distance</td><td align=center>Location (optional)</td><td align=center>Time (Open)</td><td align=left>Time (Close)</td></tr>

{% for i in range(8) %}
<tr><td colspan=4>
<div class="row">
  <div class="inline">
    <input type="text" align=center class="form-control"
     name="distance" value="" size="15%">
  </div>
  <div class="inline">
    <input type="text" align=center class="form-control"
      name="location" value="" size="20%"/>
  </div>
  <div class="inline">
    <span class="otimes form-control">(otime)</span>
  </div>
  <div class="inline" align="center">
    <span class="ctimes form-control">(ctime)</span>
  </div>
</div>
</td></tr>
{% endfor %}
</table>

</form>

<script type="text/javascript">

  $SCRIPT_ROOT = {{ request.script_root|tojson|safe }};

  $(document).ready(function(){
   // Do the following when the page is finished loading

      // When a field named 'distance' is changed ...
      $('input[name="distance"]').change(
          // ... execute this function
          function(){
              //Declare variables from input fields
              var sTime = document.getElementById("st").value;
              var sDate = document.getElementById("sd").value;
              var e_miles = $(this).val();
              var openTarget = $(this).parents(".row").find(".otimes");
              var closeTarget = $(this).parents(".row").find (".ctimes");


              //Adjust distance var to format user selection
              //times calculated in km so do nothing if km selected
              if(document.getElementById('inMi').selected) {
                  e_miles = e_miles / 2.2; }

              // AJAX request
              $.getJSON($SCRIPT_ROOT + '/_calc_times',
                  // The objects to pass to the server
                  { distance: e_miles, startDate: sDate, startTime: sTime },
                  // The function to call with the response
                  function(data) {
                     var oTime = data.oresult;
                     var cTime = data.cresult;
                     // alert("Got a response: " +  times);
                     openTarget.text(oTime);
                     closeTarget.text(cTime);
                  }); // End of the call to getJSON
          });  // End of the function to be called when field changes

     });   // end of what we do on document ready

</script>

</div>
</body> </html>
